How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    When I used the diff commaand in the terminal, it displayed the differences between the two files by pointing out the line in which there was a difernece.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will let us know when was the file edited and we can also view any of the older versions of file, if we want to.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual Commits:
     pros-It depends on us when to commit and when not to.Each commit will have a logical and functional change.
          We will have a clear idea of which commit has what changes while looking in the search history.
 
     cons-Sometimes we can forget to commit or there could be some h/w or s/w failure.

    Automatic Commits:
     pros-Even if we forget to commit for some reason, the commit will be made automatically, therefore saving any important work done during that time.   
          
     cons-It will be hard to differenciate commits on the basis of what kind of changes are made.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
eE
    Saving multiple files in one commit is very helpful.Each commit tells us which all files have been changed in a commit and what is the size of the commit.

How can you use the commands git log and git diff to view the history of files?

    First, type git log to get all the commit history of the repository.
    Then use git diff with the two commit ids which you would like to compare.
    Each red line is a deletion and each green line is an addition.

How might using version control make you more confident to make changes that
could break something?

    If a buggy file is introduced,we can restore the previous versions of the files by using git checkout.Keep using it
    until you fing the file which has the bug. 

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use git for creating a new project from scratch and in the process I will learn version control and 
    checking for bugs in the files.